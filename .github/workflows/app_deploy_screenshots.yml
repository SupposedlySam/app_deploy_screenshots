name: App Deploy Screenshots

on:
  workflow_call:
    inputs:
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: ""
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      setup:
        required: false
        type: string
        default: ""
      working_directory:
        required: false
        type: string
        default: "."
    secrets:
      ssh_key:
        required: false


jobs:
  generate-screenshots:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}
    outputs:
      screenshots_generated: ${{ steps.check_screenshots.outputs.files_exist }}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 🤫 Set SSH Key
        env:
          ssh_key: ${{secrets.ssh_key}}
        if: env.ssh_key != null
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{secrets.ssh_key}}

      - name: Install Dependencies
        run: flutter pub get

      - name: ⚙️ Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      - name: Generate App Deploy Screenshots
        run: flutter test --tags app_deploy_screenshots

      - name: Check Screenshots Generated
        id: check_screenshots
        run: |
          if [ -n "$(find . -path './app_deploy_screenshots/**/*.png' -type f)" ]; then
            echo "files_exist=true" >> $GITHUB_OUTPUT
          else
            echo "files_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Screenshots Artifact
        if: steps.check_screenshots.outputs.files_exist == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: app-screenshots
          path: app_deploy_screenshots/**/*.png
          retention-days: 1

  # New job that calls the upload workflow
  upload:
    needs: generate-screenshots
    if: needs.generate-screenshots.outputs.screenshots_generated == 'true'
    uses: ./.github/workflows/upload_screenshots.yml

      